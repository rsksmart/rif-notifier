logging:
    level:
        org:
            rif:
                notifier:
                    datafetcher: ERROR
                    runner:
                        SubscriptionPlanLoader: WARN
                    scheduled: ERROR
                    scheduled.NotificationProcessorJob: ERROR
management:
    endpoint:
        health:
            show-details: always
notificationservice:
    email:
        from: no_reply@iovlabs.org
    maxretries: 3
    services:
        enabled: ${notificationpreferences}
    sms:
        from: 13473475555
    twilio:
        account_sid: test
        auth_token: test
notifier:
    blocks:
        block-confirmation-count: ${blockconfirmationcount}
        start-from-RSK-last-block: false
    executor:
        corePoolSize: 7
        maxPoolSize: 14
        queueCapacity: 14
    notifications:
        maxquerylimit: 1000
    run:
        fixedDelayFetchingChainAddresses: 3000
        fixedDelayFetchingJob: 5000
        fixedDelayNotificationJob: 3000
        fixedDelayProcessJob: 3000
        fixedDelaySubscriptionProcessorJob: 3600000
        fixedInitialDelayFetchingChainAddresses: 2000
        fixedInitialDelayFetchingJob: 2000
        fixedInitialDelayNotificationJob: 2000
        fixedInitialDelayProcessJob: 2000
        fixedInitialSubscriptionProcessorJob: 3600000
        poolSize: 7
    endpoints:
        subscribecontroller: false
        notificationPreferenceController: false
rif:
    notifier:
        account:
            file: UTC--2019-04-19T15-07-00.568000000Z--034000b5f2862d114e4b3474f79fc64aad0cb742.json
            password:
        provider:
            address: ${provideraddress}
            privatekey: ${providerprivatekey}
        subscription:
            currencies: ${acceptedcurrencies}
rsk:
    blockchain:
        endpoint: ${rskendpoint}
        multichaincontract: ${multichaincontract}
        notification-manager-contract: ${notificationmanagercontract}
        tokennetworkregistry: ${tokennetworkregistry}
        luminoinvoice: ${luminoinvoice:}
spring:
    datasource:
        url: jdbc:mysql://${dbhost:localhost}/${dbname:rif_notifier}?createDatabaseIfNotExist=true
        initialization-mode: never
        username: ${dbuser}
        password: ${dbpassword}
        hikari:
          connectionTimeout: 100000
          idleTimeout: 600000
          maxlifetime: 1800000
          maximumPoolSize: 10
    mail:
        host: smtp.gmail.com
        password:
        port: 587
        properties:
            mail:
                smtp:
                    auth: true
                    connectiontimeout: 5000
                    starttls:
                        enable: true
                    timeout: 5000
                    writetimeout: 5000
        username:
    task:
        scheduling:
            pool:
                size: 6
flyway:
    url: jdbc:mysql:${dbhost:localhost}/${dbname:rif_notifier}
    user: ${dbuser}
    password: ${dbpassword}
server:
    port: ${serverport:8080}